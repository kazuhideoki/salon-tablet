{
  // Place your GLOBAL snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // },
  "Storybook default": {
    "scope": "javascriptreact,typescriptreact",
    "prefix": "story",
    "body": [
      "import React from 'react';",
      "import { $1 } from '../$2';",
      "export default {",
      "  title: '$1',",
      "  component: $1,",
      "};",
      "",
      "const props = ",
      "",
      "export const Normal = () => {",
      "",
      "  return (",
      "    <$1 {...props}/>",
      "  )",
      "}",
    ],
    "description": "Storybook default"
  },
  "Storybook with Themes": {
    "scope": "javascriptreact,typescriptreact",
    "prefix": "storywiththeme",
    "body": [
      "import React from 'react';",
      "import { $1 } from '../$2';",
      "import { Provider } from './lib/ThemeProvider';",
      "export default {",
      "  title: '$1',",
      "  component: $1,",
      "  decorators: [story => <Provider >{story()}</Provider>],",
      "};",
      "",
      "const props = ",
      "",
      "export const Normal = () => {",
      "",
      "  return (",
      "    <$1 {...props}/>",
      "  )",
      "}",
    ],
    "description": "Storybook default"
  },
  "console.log": {
    "prefix": "log",
    "body": [
      "console.log('$1は ' + $1)"
    ],
    "description": "コンソールログ"
  },
  "console.log JSON.stringify": {
    "prefix": "logj",
    "body": [
      "console.log('$1は ' + JSON.stringify($1))"
    ],
    "description": "コンソールログ"
  },
}